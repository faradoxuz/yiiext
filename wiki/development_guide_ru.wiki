#summary Руководство по разработке
#labels Featured

= Структура репозитария =
Репозитарий имеет структуру, максимально похожую на реальное приложение.

{{{
app
  commands
  components
  config
    main.php
    routes.php
    test.php — конифгурация, используемая в тестах
  controllers
  extensions — расширения
  models
  runtime
  tests — тесты
    fixtures — данные для инициализации БД
    functional — функциональные тесты
    report
    sql — структуры БД, необходимые для некоторых расширений
    unit — модульные тесты
    rununit.bat — запускает все модульные тесты
    bootstrap.php
    WebTestCase.php
    readme_ru.txt — очень полезный файлик
    phpunit.xml
  views
framework
www
}}}  

= Именование расширений =
Для предотвращения путаницы все классы расширений именуются в одном стиле.

= Релизы =
  * Релиз упаковывается в zip архив без тестов, но с документацией.
  * В релиз не должен попасть код, не прошедший все написанные для него модульные тесты.
  * В релиз должны попасть актуальные readme_ru.txt, readme_en.txt, changelog.txt.

= Тестирование =
  * Readme по настройке и запуску тестов находится в /app/tests/readme_ru.txt.

= Стандарты кода =
  * Кодировка: UTF-8 без BOM.
  * Отступы: табуляция.
  * В виджетах используются свойства вместо соответствующих им get-set методов, во всех остальных местах — наоборот.
  * DIRECTORY_SEPARATOR не используется, если это не связано с разбивкой пути на сегменты.
  * Даже однострочные if, while, foreach необходимо писать со скобками foreach($x as $y){

= Структура каталога расширений =
Все расширения располагаются в каталоге /extensions/yiiext, который в свою очередь имеет следующую структуру:
  * component (комплекты компонентов, которые нельзя однозначно отнести к другим категориям)
  * behaviors (поведения)
  * behaviors/model (поведения моделей, в том числе и ar)
  * renderers (обработчики видов)
  * widgets (виджеты)
Каждое расширение должно иметь свою директорию. Директория именуется с маленькой буквой и лаконично отражает суть расширения. Например компонент CTaggableBehavior размещается в каталог /extensions/yiiext/behaviors/model/taggable/.
Что касается виджетов, то к ним применяются те же правила, с одним уточнением. Виджеты в своем каталоге должны иметь директорию views, где находятся виды по умолчанию, а также иметь свойство view, которое по умолчанию имеет значение имени файла(без расширения) вида по умолчанию. Таким образом любое отображение в виджете должно вызываться следующим образом:
$this->render($this->view,$params);